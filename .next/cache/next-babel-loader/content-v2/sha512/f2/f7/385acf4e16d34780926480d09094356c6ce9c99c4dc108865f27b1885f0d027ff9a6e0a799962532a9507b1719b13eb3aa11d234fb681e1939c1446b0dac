{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\nftcalendar\\\\src\\\\contexts\\\\LoginContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nexport var LoginContext = /*#__PURE__*/createContext({});\nexport function LoginContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      userId = _useState[0],\n      setUserId = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(false),\n      isUserLoggedIn = _useState3[0],\n      setIsUserLoggedIn = _useState3[1];\n\n  useEffect(function () {\n    var id = localStorage.getItem(\"@apes/userId\") ? parseInt(localStorage.getItem(\"@apes/userId\")) : 0;\n    var name = localStorage.getItem(\"@apes/userName\") ? localStorage.getItem(\"@apes/userName\") : \"\";\n    setUserName(name);\n    setUserId(id);\n  }, []);\n\n  function login(id, name) {\n    setIsUserLoggedIn(true);\n    setUserId(id);\n    setUserName(name);\n  }\n\n  function logout() {\n    setIsUserLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      userId: userId,\n      userName: userName,\n      isUserLoggedIn: isUserLoggedIn,\n      login: login,\n      logout: logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginContextProvider, \"+3v4alXR6ljbfG1A7K5fVdggeOM=\");\n\n_c = LoginContextProvider;\nexport var useLogin = function useLogin() {\n  _s2();\n\n  return useContext(LoginContext);\n};\n\n_s2(useLogin, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContextProvider\");","map":{"version":3,"sources":["C:/nftcalendar/src/contexts/LoginContext.tsx"],"names":["createContext","useContext","useEffect","useState","LoginContext","LoginContextProvider","children","userId","setUserId","userName","setUserName","isUserLoggedIn","setIsUserLoggedIn","id","localStorage","getItem","parseInt","name","login","logout","useLogin"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AAUA,OAAO,IAAMC,YAAY,gBAAGJ,aAAa,CAAC,EAAD,CAAlC;AAMP,OAAO,SAASK,oBAAT,OAAuE;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;;AAAA,kBACjDH,QAAQ,CAAC,CAAD,CADyC;AAAA,MACtEI,MADsE;AAAA,MAC9DC,SAD8D;;AAAA,mBAE7CL,QAAQ,CAAC,EAAD,CAFqC;AAAA,MAEtEM,QAFsE;AAAA,MAE5DC,WAF4D;;AAAA,mBAGjCP,QAAQ,CAAC,KAAD,CAHyB;AAAA,MAGtEQ,cAHsE;AAAA,MAGtDC,iBAHsD;;AAK7EV,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMW,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,IAAuCC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAA/C,GAAwF,CAAnG;AACA,QAAME,IAAI,GAAGH,YAAY,CAACC,OAAb,CAAqB,gBAArB,IAAyCD,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAzC,GAAkF,EAA/F;AAEAL,IAAAA,WAAW,CAACO,IAAD,CAAX;AACAT,IAAAA,SAAS,CAACK,EAAD,CAAT;AACA,GANQ,EAMN,EANM,CAAT;;AAQA,WAASK,KAAT,CAAeL,EAAf,EAA2BI,IAA3B,EAAyC;AACxCL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAJ,IAAAA,SAAS,CAACK,EAAD,CAAT;AACAH,IAAAA,WAAW,CAACO,IAAD,CAAX;AACA;;AAED,WAASE,MAAT,GAAkB;AACjBP,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;;AAED,sBACC,QAAC,YAAD,CAAc,QAAd;AACC,IAAA,KAAK,EAAE;AACNL,MAAAA,MAAM,EAANA,MADM;AAENE,MAAAA,QAAQ,EAARA,QAFM;AAGNE,MAAAA,cAAc,EAAdA,cAHM;AAINO,MAAAA,KAAK,EAALA,KAJM;AAKNC,MAAAA,MAAM,EAANA;AALM,KADR;AAAA,cAQEb;AARF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GAnCeD,oB;;KAAAA,oB;AAqChB,OAAO,IAAMe,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAC7B,SAAOnB,UAAU,CAACG,YAAD,CAAjB;AACA,CAFM;;IAAMgB,Q","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\n\r\ntype LoginContextData = {\r\n\tisUserLoggedIn: boolean;\r\n\tuserId: number;\r\n\tuserName: string;\r\n\tlogin: (id: number, name: string) => void;\r\n\tlogout: () => void;\r\n};\r\n\r\nexport const LoginContext = createContext({} as LoginContextData);\r\n\r\ntype LoginContextProviderProps = {\r\n\tchildren: ReactNode;\r\n};\r\n\r\nexport function LoginContextProvider({ children }: LoginContextProviderProps) {\r\n\tconst [userId, setUserId] = useState(0);\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = localStorage.getItem(\"@apes/userId\") ? parseInt(localStorage.getItem(\"@apes/userId\")) : 0;\r\n\t\tconst name = localStorage.getItem(\"@apes/userName\") ? localStorage.getItem(\"@apes/userName\") : \"\";\r\n\r\n\t\tsetUserName(name);\r\n\t\tsetUserId(id);\r\n\t}, []);\r\n\r\n\tfunction login(id: number, name: string) {\r\n\t\tsetIsUserLoggedIn(true);\r\n\t\tsetUserId(id);\r\n\t\tsetUserName(name);\r\n\t}\r\n\r\n\tfunction logout() {\r\n\t\tsetIsUserLoggedIn(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LoginContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tuserId,\r\n\t\t\t\tuserName,\r\n\t\t\t\tisUserLoggedIn,\r\n\t\t\t\tlogin,\r\n\t\t\t\tlogout,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</LoginContext.Provider>\r\n\t);\r\n}\r\n\r\nexport const useLogin = () => {\r\n\treturn useContext(LoginContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}