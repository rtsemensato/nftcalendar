{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projetosEstudo\\\\nftcalendar\\\\src\\\\contexts\\\\LoginContext.tsx\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nexport const LoginContext = /*#__PURE__*/createContext({});\nexport function LoginContextProvider({\n  children\n}) {\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(0);\n  const {\n    0: userName,\n    1: setUserName\n  } = useState(\"\");\n  const {\n    0: isUserLoggedIn,\n    1: setIsUserLoggedIn\n  } = useState(false);\n  useEffect(() => {\n    const id = localStorage.getItem(\"@apes/userId\") ? parseInt(localStorage.getItem(\"@apes/userId\")) : 0;\n    const name = localStorage.getItem(\"@apes/userName\") ? localStorage.getItem(\"@apes/userName\") : \"\";\n    setUserName(name);\n    setUserId(id);\n  }, []);\n\n  function login(id, name) {\n    setIsUserLoggedIn(true);\n    setUserId(id);\n    setUserName(name);\n  }\n\n  function logout() {\n    setIsUserLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      userId,\n      userName,\n      isUserLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\nexport const useLogin = () => {\n  return useContext(LoginContext);\n};","map":{"version":3,"sources":["C:/projetosEstudo/nftcalendar/src/contexts/LoginContext.tsx"],"names":["createContext","useContext","useEffect","useState","LoginContext","LoginContextProvider","children","userId","setUserId","userName","setUserName","isUserLoggedIn","setIsUserLoggedIn","id","localStorage","getItem","parseInt","name","login","logout","useLogin"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AAUA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,EAAD,CAAlC;AAMP,OAAO,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAuE;AAC7E,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,cAAD;AAAA,OAAiBC;AAAjB,MAAsCT,QAAQ,CAAC,KAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,IAAuCC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAA/C,GAAwF,CAAnG;AACA,UAAME,IAAI,GAAGH,YAAY,CAACC,OAAb,CAAqB,gBAArB,IAAyCD,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAzC,GAAkF,EAA/F;AAEAL,IAAAA,WAAW,CAACO,IAAD,CAAX;AACAT,IAAAA,SAAS,CAACK,EAAD,CAAT;AACA,GANQ,EAMN,EANM,CAAT;;AAQA,WAASK,KAAT,CAAeL,EAAf,EAA2BI,IAA3B,EAAyC;AACxCL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAJ,IAAAA,SAAS,CAACK,EAAD,CAAT;AACAH,IAAAA,WAAW,CAACO,IAAD,CAAX;AACA;;AAED,WAASE,MAAT,GAAkB;AACjBP,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;;AAED,sBACC,QAAC,YAAD,CAAc,QAAd;AACC,IAAA,KAAK,EAAE;AACNL,MAAAA,MADM;AAENE,MAAAA,QAFM;AAGNE,MAAAA,cAHM;AAINO,MAAAA,KAJM;AAKNC,MAAAA;AALM,KADR;AAAA,cAQEb;AARF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;AAED,OAAO,MAAMc,QAAQ,GAAG,MAAM;AAC7B,SAAOnB,UAAU,CAACG,YAAD,CAAjB;AACA,CAFM","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\n\r\ntype LoginContextData = {\r\n\tisUserLoggedIn: boolean;\r\n\tuserId: number;\r\n\tuserName: string;\r\n\tlogin: (id: number, name: string) => void;\r\n\tlogout: () => void;\r\n};\r\n\r\nexport const LoginContext = createContext({} as LoginContextData);\r\n\r\ntype LoginContextProviderProps = {\r\n\tchildren: ReactNode;\r\n};\r\n\r\nexport function LoginContextProvider({ children }: LoginContextProviderProps) {\r\n\tconst [userId, setUserId] = useState(0);\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = localStorage.getItem(\"@apes/userId\") ? parseInt(localStorage.getItem(\"@apes/userId\")) : 0;\r\n\t\tconst name = localStorage.getItem(\"@apes/userName\") ? localStorage.getItem(\"@apes/userName\") : \"\";\r\n\r\n\t\tsetUserName(name);\r\n\t\tsetUserId(id);\r\n\t}, []);\r\n\r\n\tfunction login(id: number, name: string) {\r\n\t\tsetIsUserLoggedIn(true);\r\n\t\tsetUserId(id);\r\n\t\tsetUserName(name);\r\n\t}\r\n\r\n\tfunction logout() {\r\n\t\tsetIsUserLoggedIn(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LoginContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tuserId,\r\n\t\t\t\tuserName,\r\n\t\t\t\tisUserLoggedIn,\r\n\t\t\t\tlogin,\r\n\t\t\t\tlogout,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</LoginContext.Provider>\r\n\t);\r\n}\r\n\r\nexport const useLogin = () => {\r\n\treturn useContext(LoginContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}