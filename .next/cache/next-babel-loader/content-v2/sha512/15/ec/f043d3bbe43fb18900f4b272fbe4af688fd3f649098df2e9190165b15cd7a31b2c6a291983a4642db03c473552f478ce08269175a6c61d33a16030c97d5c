{"ast":null,"code":"import _regeneratorRuntime from \"C:/nftcalendar/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/nftcalendar/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\nftcalendar\\\\src\\\\contexts\\\\PageHeaderContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { format, parseISO } from \"date-fns\";\nimport { ptBR } from \"date-fns/locale\";\nimport { createContext, useContext, useState } from \"react\";\nimport { apiFakeServer } from \"../services/api\";\nexport var PageHeaderContext = /*#__PURE__*/createContext({});\nexport function PageHeaderContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      isPageHeaderHidden = _useState[0],\n      setIsPageHeaderHidden = _useState[1];\n\n  function getUserData(_x) {\n    return _getUserData.apply(this, arguments);\n  }\n\n  function _getUserData() {\n    _getUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var _yield$apiFakeServer$, userData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return apiFakeServer.get(\"userGet/\".concat(id));\n\n            case 2:\n              _yield$apiFakeServer$ = _context.sent;\n              userData = _yield$apiFakeServer$.data;\n              return _context.abrupt(\"return\", userData);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getUserData.apply(this, arguments);\n  }\n\n  function getNotificationsData() {\n    return _getNotificationsData.apply(this, arguments);\n  }\n\n  function _getNotificationsData() {\n    _getNotificationsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$apiFakeServer$2, notificationsData, notificationsList;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return apiFakeServer.get(\"notificationGet\");\n\n            case 2:\n              _yield$apiFakeServer$2 = _context2.sent;\n              notificationsData = _yield$apiFakeServer$2.data;\n              notificationsList = notificationsData.map(function (notification) {\n                return {\n                  id: notification.id,\n                  description: notification.description,\n                  type: notification.type,\n                  dateTimeReceived: format(parseISO(notification.dateTimeReceived), \"dd/MM/yyyy h:m:s\", {\n                    locale: ptBR\n                  })\n                };\n              });\n              return _context2.abrupt(\"return\", notificationsList);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getNotificationsData.apply(this, arguments);\n  }\n\n  function hidePageHeader() {\n    setIsPageHeaderHidden(true);\n  }\n\n  function showPageHeader() {\n    setIsPageHeaderHidden(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PageHeaderContext.Provider, {\n    value: {\n      isPageHeaderHidden: isPageHeaderHidden,\n      hidePageHeader: hidePageHeader,\n      showPageHeader: showPageHeader,\n      getUserData: getUserData,\n      getNotificationsData: getNotificationsData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\n_s(PageHeaderContextProvider, \"s3hDICqTXz4F+82VhVEjxUFfMFo=\");\n\n_c = PageHeaderContextProvider;\nexport var usePageHeader = function usePageHeader() {\n  _s2();\n\n  return useContext(PageHeaderContext);\n};\n\n_s2(usePageHeader, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHeaderContextProvider\");","map":{"version":3,"sources":["C:/nftcalendar/src/contexts/PageHeaderContext.tsx"],"names":["format","parseISO","ptBR","createContext","useContext","useState","apiFakeServer","PageHeaderContext","PageHeaderContextProvider","children","isPageHeaderHidden","setIsPageHeaderHidden","getUserData","id","get","userData","data","getNotificationsData","notificationsData","notificationsList","map","notification","description","type","dateTimeReceived","locale","hidePageHeader","showPageHeader","usePageHeader"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,aAAT,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,OAA/D;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAaA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASK,yBAAT,OAAiF;AAAA;;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;;AAAA,kBACnCJ,QAAQ,CAAC,KAAD,CAD2B;AAAA,MAChFK,kBADgF;AAAA,MAC5DC,qBAD4D;;AAAA,WAGxEC,WAHwE;AAAA;AAAA;;AAAA;AAAA,4EAGvF,iBAA2BC,EAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACkCP,aAAa,CAACQ,GAAd,mBAA6BD,EAA7B,EADlC;;AAAA;AAAA;AACeE,cAAAA,QADf,yBACSC,IADT;AAAA,+CAGQD,QAHR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHuF;AAAA;AAAA;;AAAA,WASxEE,oBATwE;AAAA;AAAA;;AAAA;AAAA,qFASvF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC2CX,aAAa,CAACQ,GAAd,CAAkB,iBAAlB,CAD3C;;AAAA;AAAA;AACeI,cAAAA,iBADf,0BACSF,IADT;AAGOG,cAAAA,iBAHP,GAG2BD,iBAAiB,CAACE,GAAlB,CAAsB,UAACC,YAAD,EAAgC;AAC/E,uBAAO;AACNR,kBAAAA,EAAE,EAAEQ,YAAY,CAACR,EADX;AAENS,kBAAAA,WAAW,EAAED,YAAY,CAACC,WAFpB;AAGNC,kBAAAA,IAAI,EAAEF,YAAY,CAACE,IAHb;AAINC,kBAAAA,gBAAgB,EAAExB,MAAM,CAACC,QAAQ,CAACoB,YAAY,CAACG,gBAAd,CAAT,EAA0C,kBAA1C,EAA8D;AAAEC,oBAAAA,MAAM,EAAEvB;AAAV,mBAA9D;AAJlB,iBAAP;AAMA,eAPyB,CAH3B;AAAA,gDAYQiB,iBAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATuF;AAAA;AAAA;;AAwBvF,WAASO,cAAT,GAA0B;AACzBf,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA;;AAED,WAASgB,cAAT,GAA0B;AACzBhB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;;AAED,sBACC,QAAC,iBAAD,CAAmB,QAAnB;AACC,IAAA,KAAK,EAAE;AACND,MAAAA,kBAAkB,EAAlBA,kBADM;AAENgB,MAAAA,cAAc,EAAdA,cAFM;AAGNC,MAAAA,cAAc,EAAdA,cAHM;AAINf,MAAAA,WAAW,EAAXA,WAJM;AAKNK,MAAAA,oBAAoB,EAApBA;AALM,KADR;AAAA,cAQER;AARF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GA5CeD,yB;;KAAAA,yB;AA8ChB,OAAO,IAAMoB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAClC,SAAOxB,UAAU,CAACG,iBAAD,CAAjB;AACA,CAFM;;IAAMqB,a","sourcesContent":["import { format, parseISO } from \"date-fns\";\r\nimport { ptBR } from \"date-fns/locale\";\r\nimport { createContext, ReactNode, useContext, useState } from \"react\";\r\n\r\nimport { apiFakeServer } from \"../services/api\";\r\n\r\nimport { Notification } from \"../types/Notification\";\r\nimport { Usuario } from \"../types/Usuario\";\r\n\r\ntype PageHeaderContextData = {\r\n\tisPageHeaderHidden: boolean;\r\n\thidePageHeader: () => void;\r\n\tshowPageHeader: () => void;\r\n\tgetUserData: (id: number) => Promise<Usuario>;\r\n\tgetNotificationsData: () => Promise<Notification[]>;\r\n};\r\n\r\nexport const PageHeaderContext = createContext({} as PageHeaderContextData);\r\n\r\ntype PageHeaderContextProviderProps = {\r\n\tchildren: ReactNode;\r\n};\r\n\r\nexport function PageHeaderContextProvider({ children }: PageHeaderContextProviderProps) {\r\n\tconst [isPageHeaderHidden, setIsPageHeaderHidden] = useState(false);\r\n\r\n\tasync function getUserData(id: number): Promise<Usuario> {\r\n\t\tconst { data: userData } = await apiFakeServer.get(`userGet/${id}`);\r\n\r\n\t\treturn userData;\r\n\t}\r\n\r\n\tasync function getNotificationsData(): Promise<Notification[]> {\r\n\t\tconst { data: notificationsData } = await apiFakeServer.get(\"notificationGet\");\r\n\r\n\t\tconst notificationsList = notificationsData.map((notification: Notification) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: notification.id,\r\n\t\t\t\tdescription: notification.description,\r\n\t\t\t\ttype: notification.type,\r\n\t\t\t\tdateTimeReceived: format(parseISO(notification.dateTimeReceived), \"dd/MM/yyyy h:m:s\", { locale: ptBR }),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn notificationsList;\r\n\t}\r\n\r\n\tfunction hidePageHeader() {\r\n\t\tsetIsPageHeaderHidden(true);\r\n\t}\r\n\r\n\tfunction showPageHeader() {\r\n\t\tsetIsPageHeaderHidden(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PageHeaderContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tisPageHeaderHidden,\r\n\t\t\t\thidePageHeader,\r\n\t\t\t\tshowPageHeader,\r\n\t\t\t\tgetUserData,\r\n\t\t\t\tgetNotificationsData,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</PageHeaderContext.Provider>\r\n\t);\r\n}\r\n\r\nexport const usePageHeader = () => {\r\n\treturn useContext(PageHeaderContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}