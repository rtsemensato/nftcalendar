{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projetosEstudo\\\\nftcalendar\\\\src\\\\contexts\\\\LoginContext.tsx\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nexport const LoginContext = /*#__PURE__*/createContext({});\nexport function LoginContextProvider({\n  children\n}) {\n  const {\n    0: userLogin,\n    1: setUserLogin\n  } = useState(\"\");\n  const {\n    0: isUserLoggedIn,\n    1: setIsUserLoggedIn\n  } = useState(false);\n  useEffect(() => {\n    const login = localStorage.getItem(\"@apes/userLogin\") ? localStorage.getItem(\"@apes/userLogin\") : \"\";\n    setUserLogin(login);\n  }, []);\n\n  function login(login) {\n    setIsUserLoggedIn(true);\n    setUserLogin(login);\n  }\n\n  function logout() {\n    setIsUserLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      userLogin,\n      isUserLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\nexport const useLogin = () => {\n  return useContext(LoginContext);\n};","map":{"version":3,"sources":["C:/projetosEstudo/nftcalendar/src/contexts/LoginContext.tsx"],"names":["createContext","useContext","useEffect","useState","LoginContext","LoginContextProvider","children","userLogin","setUserLogin","isUserLoggedIn","setIsUserLoggedIn","login","localStorage","getItem","logout","useLogin"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AASA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,EAAD,CAAlC;AAMP,OAAO,SAASK,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAuE;AAC7E,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACM,cAAD;AAAA,OAAiBC;AAAjB,MAAsCP,QAAQ,CAAC,KAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CD,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAA1C,GAAoF,EAAlG;AAEAL,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACA,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASA,KAAT,CAAeA,KAAf,EAA8B;AAC7BD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACA;;AAED,WAASG,MAAT,GAAkB;AACjBJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;;AAED,sBACC,QAAC,YAAD,CAAc,QAAd;AACC,IAAA,KAAK,EAAE;AACNH,MAAAA,SADM;AAENE,MAAAA,cAFM;AAGNE,MAAAA,KAHM;AAING,MAAAA;AAJM,KADR;AAAA,cAOER;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;AAED,OAAO,MAAMS,QAAQ,GAAG,MAAM;AAC7B,SAAOd,UAAU,CAACG,YAAD,CAAjB;AACA,CAFM","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\n\r\ntype LoginContextData = {\r\n\tisUserLoggedIn: boolean;\r\n\tuserLogin: string;\r\n\tlogin: (login: string) => void;\r\n\tlogout: () => void;\r\n};\r\n\r\nexport const LoginContext = createContext({} as LoginContextData);\r\n\r\ntype LoginContextProviderProps = {\r\n\tchildren: ReactNode;\r\n};\r\n\r\nexport function LoginContextProvider({ children }: LoginContextProviderProps) {\r\n\tconst [userLogin, setUserLogin] = useState(\"\");\r\n\tconst [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst login = localStorage.getItem(\"@apes/userLogin\") ? localStorage.getItem(\"@apes/userLogin\") : \"\";\r\n\r\n\t\tsetUserLogin(login);\r\n\t}, []);\r\n\r\n\tfunction login(login: string) {\r\n\t\tsetIsUserLoggedIn(true);\r\n\t\tsetUserLogin(login);\r\n\t}\r\n\r\n\tfunction logout() {\r\n\t\tsetIsUserLoggedIn(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LoginContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tuserLogin,\r\n\t\t\t\tisUserLoggedIn,\r\n\t\t\t\tlogin,\r\n\t\t\t\tlogout,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</LoginContext.Provider>\r\n\t);\r\n}\r\n\r\nexport const useLogin = () => {\r\n\treturn useContext(LoginContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}